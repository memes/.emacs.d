# DTD for the Model MBeans Configuration File
# 
# To support validation of your configuration file, include the following
# DOCTYPE element at the beginning (after the "xml" declaration):
# 
# <!DOCTYPE mbeans-descriptors PUBLIC
#  "-//Apache Software Foundation//DTD Model MBeans Configuration File"
#  "http://jakarta.apache.org/commons/dtds/mbeans-descriptors.dtd">
# 
# $Id: mbeans-descriptors.rnc 1 2007-10-18 23:15:33Z memes $

# ========== Defined Types =============================================

# A "Boolean" is the string representation of a boolean (true or false)
# variable.

Boolean = "true" | "false" | "yes" | "no"
# A "ClassName" is the fully qualified name of a Java class that is
# instantiated to provide the functionality of the enclosing element.
ClassName = string
# A "MethodName" is the name of a constructor or method, which must
# be legal according to the syntax requirements of the Java language.
MethodName = string
# A "VariableName" is the name of a variable or parameter, which must
# be legal according to the syntax requirements of the Java language.
VariableName = string
# ========== Element Definitions =======================================

# The "mbeans-descriptors" element is the root of the configuration file
# hierarchy, and contains nested elements for all of the other
# configuration settings.  Remaining element definitions are listed
# in alphabetical order.
mbeans-descriptors =
  element mbeans-descriptors { attlist.mbeans-descriptors, mbean* }
attlist.mbeans-descriptors &= attribute id { xsd:ID }?
# The "attribute" element describes a JavaBeans property of an MBean.
# The following attributes are supported:
# 
# description      Human-readable description of this attribute.
# 
# displayName      Display name of this attribute.
# 
# getMethod        Name of the property getter method, if it does
#                  not follow standard JavaBeans naming patterns.
# 
# is               Boolean value indicating whether or not this
#                  attribute is a boolean with an "is" getter method.
#                  By default, this is set to "false".
# 
# name             Name of this JavaBeans property, conforming to
#                  standard naming design patterns.
# 
# readable         Boolean value indicating whether or not this
#                  attribute is readable by management applications.
#                  By default, this is set to "true".
# 
# setMethod        Name of the property setter method, if it does
#                  not follow standard JavaBeans naming patterns.
# 
# type             Fully qualified Java class name of this attribute.
# 
# writeable        Boolean value indicating whether or not this
#                  attribute is writeable by management applications.
#                  By default, this is set to "true".
\attribute = element attribute { attlist.attribute, empty }
attlist.attribute &= attribute id { xsd:ID }?
attlist.attribute &= attribute description { text }?
attlist.attribute &= attribute displayName { text }?
attlist.attribute &= attribute getMethod { MethodName }?
attlist.attribute &= attribute is { Boolean }?
attlist.attribute &= attribute name { VariableName }?
attlist.attribute &= attribute readable { Boolean }?
attlist.attribute &= attribute setMethod { MethodName }?
attlist.attribute &= attribute type { ClassName }?
attlist.attribute &= attribute writeable { Boolean }?
# The "constructor" element describes a public constructor for the
# underlying actual class.  It may contain nested "parameter" elements
# for the various arguments to this constructor.  The following attributes
# are supported:
# 
# displayName      Display name of this constructor.
# 
# name             Name of this constructor (by Java convention, this must
#                  be the same as the base class name).
constructor = element constructor { attlist.constructor, parameter* }
attlist.constructor &= attribute id { xsd:ID }?
attlist.constructor &= attribute displayName { text }?
attlist.constructor &= attribute name { VariableName }?
# The "mbean" element describes a particular JMX ModelMBean implementation,
# including the information necessary to construct the corresponding
# ModelMBeanInfo structures.  The following attributes are supported:
# 
# className        Fully qualified Java class name of the ModelMBean
#                  implementation class.  If not specified, the standard
#                  implementation provided by JMX will be utilized.
# 
# description      Human-readable description of this managed bean.
# 
# domain           The JMX MBeanServer domain in which the ModelMBean
#                  created by this managed bean should be registered,
#                  when creating its ObjectName.
# 
# group            Optional name of a "grouping classification" that can
#                  be used to select groups of similar MBean implementation
#                  classes.
# 
# name             Unique name of this MBean (normally corresponds to the
#                  base class name of the corresponding server component).
# 
# type             Fully qualified Java class name of the underlying
#                  managed resource implementation class.
mbean =
  element mbean {
    attlist.mbean, \attribute*, constructor*, notification*, operation*
  }
attlist.mbean &= attribute id { xsd:ID }?
attlist.mbean &= attribute className { ClassName }?
attlist.mbean &= attribute description { text }?
attlist.mbean &= attribute domain { text }?
attlist.mbean &= attribute group { text }?
attlist.mbean &= attribute name { MethodName }?
attlist.mbean &= attribute type { ClassName }?
# The "notification" element describes the notification types that are
# generated by a particular managed bean.  The following attributes
# are supported:
# 
# description      Human-readable description of these notification events.
# 
# name             Name of this set of notification event types.
notification =
  element notification { attlist.notification, notification-type* }
attlist.notification &= attribute id { xsd:ID }?
attlist.notification &= attribute description { text }?
attlist.notification &= attribute name { VariableName }?
# The nested content of the "notification-type" element is the event string
# of an event that can be emitted by this MBean.
notification-type =
  element notification-type { attlist.notification-type, text }
attlist.notification-type &= attribute id { xsd:ID }?
# The "operation" element describes a the signature of a public method
# that is accessible to management applications.  The following attributes
# are supported:
# 
# description      Human-readable description of this operation.
# 
# impact           Indication of the impact of this method:
#                  ACTION (write like), ACTION-INFO (write+read like)
#                  INFO (read like), or UNKNOWN.
# 
# name             Name of this public method.
# 
# returnType       Fully qualified Java class name of the return
#                  type of this method.
operation = element operation { attlist.operation, parameter* }
attlist.operation &= attribute id { xsd:ID }?
attlist.operation &= attribute description { text }?
attlist.operation &= attribute impact { text }?
attlist.operation &= attribute name { VariableName }?
attlist.operation &= attribute returnType { ClassName }?
# The "parameter" element describes a single argument that will be passed
# to a constructor or operation.  The following attributes are supported:
# 
# description      Human-readable description of this parameter.
# 
# name             Java language name of this parameter.
# 
# type             Fully qualified Java class name of this parameter.
parameter = element parameter { attlist.parameter, empty }
attlist.parameter &= attribute id { xsd:ID }?
attlist.parameter &= attribute description { text }?
attlist.parameter &= attribute name { VariableName }?
attlist.parameter &= attribute type { ClassName }?
start = mbeans-descriptors
